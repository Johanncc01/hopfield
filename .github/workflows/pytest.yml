name: Pytest

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10']
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      # Not needed if exporting format is .gif
      #
      # - name: Install ffmpeg
      #   run: |
      #     if [ "$RUNNER_OS" == "Linux" ]; then
      #       sudo apt-get update
      #       sudo apt-get install ffmpeg
      #     elif [ "$RUNNER_OS" == "macOS" ]; then
      #       brew install ffmpeg
      #     else
      #       choco install ffmpeg
      #     fi
      #   shell: bash

      - name: Run pytest tests
        run: |
          python -m pytest

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: outputs (with ${{ matrix.os }})
          path: Outputs/
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
